一个厨师收集了他 n 道菜的满意程度 satisfaction ，这个厨师做出每道菜的时间都是 1 单位时间。

一道菜的 「 like-time 系数 」定义为烹饪这道菜结束的时间（包含之前每道菜所花费的时间）乘以这道菜的满意程度，也就是 time[i]*satisfaction[i] 。

返回厨师在准备了一定数量的菜肴后可以获得的最大 like-time 系数 总和。

你可以按 任意 顺序安排做菜的顺序，你也可以选择放弃做某些菜来获得更大的总和。
-----------------------------------------------------------------------------------------
class Solution {
public:
    int maxSatisfaction(vector<int>& satisfaction) {
        sort(satisfaction.begin(),satisfaction.end(),less<int>());
        vector<long long> temp;
        long long res;
        for(int i = 0; i < satisfaction.size(); ++i){
            res = 0;
            for(int j = i; j < satisfaction.size(); ++j){
                res += satisfaction[j] * (j - i + 1);
            }
            temp.emplace_back(res);
        }
        res = *max_element(temp.begin(),temp.end());
        return res > 0 ? res : 0;
    }
};
